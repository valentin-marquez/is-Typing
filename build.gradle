
plugins {
    // Cambiar a una versión más antigua de Loom que no use unpick 3.x
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven { url = "https://maven.architectury.dev/" }
        maven { url = "https://maven.fabricmc.net/" }
        mavenCentral()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
    }

    loom {
        runs {
            client {
                client()
                configName = "Fabric Client"
                ideConfigGenerated = true
                runDir = "run/client"
                vmArgs '-Xmx768M', '-Xms256M', '-XX:+UseG1GC', '-XX:+UseStringDeduplication', '-XX:MaxMetaspaceSize=256m'
            }
            client2 {
                client()
                configName = "Fabric Client 2"
                ideConfigGenerated = true
                runDir = "run/client2"
                vmArgs '-Xmx768M', '-Xms256M', '-XX:+UseG1GC', '-XX:+UseStringDeduplication', '-XX:MaxMetaspaceSize=256m'
                programArgs '--username=TestPlayer2'
            }
            server {
                server()
                configName = "Fabric Server"
                ideConfigGenerated = true
                runDir = "run/server"
                vmArgs '-Xmx1G', '-Xms512M', '-XX:+UseG1GC', '-XX:+UseStringDeduplication', '-XX:MaxMetaspaceSize=256m'
            }
        }
    }

    java {
        withSourcesJar()
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
        it.options.encoding = 'UTF-8'
        it.options.incremental = true
        it.options.fork = true
        it.options.forkOptions.memoryMaximumSize = '512m'
    }

    tasks.withType(JavaExec).configureEach {
        javaLauncher.set(javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(17)
        })
        maxHeapSize = '512m'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        repositories {
            // repositorios de publicación si los hay
        }
    }
}